[package]
name = "solana-sniper-bot"
version = "0.1.0"
edition = "2021"
authors = ["Hassan Hafedh Ubaid <hassan@example.com>"]
description = "Ultra-fast Solana token sniper bot with scenario-based testing and advanced risk management"
homepage = "https://github.com/hassanubaid/solana-sniper-rust"
repository = "https://github.com/hassanubaid/solana-sniper-rust"
license = "MIT"
keywords = ["solana", "trading", "defi", "sniper", "bot", "blockchain"]
categories = ["finance", "cryptocurrency", "command-line-utilities"]
readme = "README.md"
rust-version = "1.75"

[[bin]]
name = "sniper-bot"
path = "src/main.rs"

[lib]
name = "solana_sniper_bot"
path = "src/lib.rs"

[dependencies]
# Async Runtime & Concurrency
tokio = { version = "1.35", features = [
    "macros", "rt-multi-thread", "time", "sync", "signal",
    "process", "fs", "net", "parking_lot", "tracing"
] }
tokio-util = { version = "0.7", features = ["time", "codec"] }
futures = "0.3"
async-trait = "0.1"

# Error Handling & Result Types
anyhow = "1.0"
thiserror = "2.0.12"
color-eyre = "0.6"

# Observability & Monitoring
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = [
    "env-filter", "json", "registry", "fmt", "ansi", "chrono"
] }
tracing-appender = "0.2"
tracing-futures = "0.2"

# Metrics & Performance
metrics = "0.24.2"
metrics-exporter-prometheus = { version = "0.17.0", optional = true }

# Solana Ecosystem (Latest stable versions)
solana-client = "2.2.7"
solana-sdk = "2.2.2"
solana-account-decoder = "2.2.7"
solana-transaction-status = "2.2.7"
solana-program = "2.2.1"
spl-token = "8.0.0"
spl-associated-token-account = "7.0.0"

# HTTP & Networking
reqwest = { version = "0.12.19", features = [
    "json", "rustls-tls", "stream", "gzip", "brotli"
] }
hyper = { version = "1.6.0", features = ["full"] }
tower = { version = "0.5.2", features = ["full"] }
url = { version = "2.5", features = ["serde"] }

# Serialization & Deserialization
serde = { version = "1.0", features = ["derive", "rc"] }
serde_json = { version = "1.0", features = ["preserve_order"] }
serde_yaml = "0.9"
toml = "0.8"
bincode = "2.0.1"

# Configuration Management
config = { version = "0.15.11", features = ["yaml", "toml", "json"] }
dotenvy = "0.15"
clap = { version = "4.4", features = ["derive", "env"] }

# Database & Caching
sqlx = { version = "0.8.6", features = [
    "postgres", "runtime-tokio-rustls", "macros",
    "uuid", "chrono", "json", "migrate"
] }
redis = { version = "0.31.0", features = [
    "tokio-comp", "connection-manager", "cluster", "streams"
] }

# Telegram Integration
teloxide = { version = "0.15.0", features = ["macros", "webhooks"] }

# Cryptography & Security
ring = "0.17"
aes-gcm = "0.10"
chacha20poly1305 = "0.10"
argon2 = "0.5"
base64 = "0.22.1"
base58 = "0.2"
hex = "0.4"
rand = "0.9.1"
zeroize = { version = "1.7", features = ["zeroize_derive"] }
# Time & Date
chrono = { version = "0.4", features = ["serde"] }
time = { version = "0.3", features = ["serde", "macros"] }

# Utilities
uuid = { version = "1.6", features = ["v4", "serde"] }
once_cell = "1.19"
lazy_static = "1.4"
dashmap = "6.1.0"
parking_lot = "0.12"
rayon = "1.8"
crossbeam = "0.8"

# Financial Calculations
rust_decimal = { version = "1.33", features = ["serde-float"] }
rust_decimal_macros = "1.33"

# Development Dependencies
[dev-dependencies]
tokio-test = "0.4"
mockall = "0.13.1"
wiremock = "0.6.3"
tempfile = "3.8"
assert_matches = "1.5"
pretty_assertions = "1.4"
criterion = { version = "0.6.0", features = ["html_reports"] }
proptest = "1.4"

# Build Optimization
[profile.release]
lto = "fat"
codegen-units = 1
panic = "abort"
strip = "symbols"
opt-level = 3
overflow-checks = false

[profile.dev]
debug = true
opt-level = 0
overflow-checks = true
incremental = true

[profile.test]
opt-level = 1

# Workspace Configuration
[workspace]
resolver = "2"

# Feature Flags
[features]
default = ["metrics", "tracing"]
metrics = ["metrics-exporter-prometheus"]
tracing = ["tracing-subscriber/json"]
development = []
production = []
simulation = []

# Benchmarks
[[bench]]
name = "trading_benchmarks"
harness = false